version: 2.1

parameters:
  targetEnv:
    type: string
    default: ''
  env:
    type: string
    default: 'develop'

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the path-filtering orb is required to continue a pipeline based on
# the path of an updated fileset
orbs:
  path-filtering: circleci/path-filtering@0.1.1

jobs:
  generate-config:
    docker:
      - image: cimg/base:2022.09
    steps:
      - checkout
      - run:
          name: Generate config
          command: |
            cat .circleci/continue_config.yml | sed -e 's/REPLACE/<<pipeline.parameters.env>>/g' > .circleci/generated_config.yml
            cat .circleci/generated_config.yml
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  # the always-run workflow is always triggered, regardless of the pipeline parameters.
  always-run:
    jobs:
      - generate-config
      # the path-filtering/filter job determines which pipeline
      # parameters to update.
      - path-filtering/filter:
          name: check-updated-files
          workspace_path: .
          # 3-column, whitespace-delimited mapping. One mapping per
          # line:
          # <regex path-to-test> <parameter-to-set> <value-of-pipeline-parameter>
          mapping: |
            frontend/.* run-build-frontend true
            backend/.* run-build-backend true
            open-api/.* run-build-open-api true
            server-layers/.* run-build-server-layers true
            . run-build-root true
          base-revision: main
          # this is the path of the configuration we should trigger once
          # path filtering and pipeline parameter value updates are
          # complete. In this case, we are using the parent dynamic
          # configuration itself.
          config-path: .circleci/generated_config.yml
          requires:
            - generate-config